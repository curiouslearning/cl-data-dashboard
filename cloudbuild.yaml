steps:
  # Step to retrieve the service account key from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo $KEYFILE_CONTENT > keyfile.json
    secretEnv: ['KEYFILE_CONTENT']
    id: 'fetch-keyfile'

  # Step to access and write other secrets to a file
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p .streamlit
        gcloud secrets versions access latest --project=$PROJECT_ID --secret=$SECRET_NAME > .streamlit/secrets.toml
    id: 'fetch-secrets'

  # Specify artifacts to persist between steps
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cp keyfile.json /workspace/keyfile.json
        cp -R .streamlit /workspace/.streamlit
    waitFor:
      - 'fetch-keyfile'
      - 'fetch-secrets'

  # Build the Docker image, including the secrets in the context
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--no-cache'
      - '--platform'
      - 'linux/amd64'
      - '-t'
      - 'gcr.io/$PROJECT_ID/cl-data-dashboard:$COMMIT_SHA'
      - '.'
    artifacts:
      objects:
        location: /workspace
        paths:
          - keyfile.json
          - .streamlit/secrets.toml

images:
  - 'gcr.io/$PROJECT_ID/cl-data-dashboard:$COMMIT_SHA'

secrets:
- kmsKeyName: projects/$PROJECT_ID/locations/global/keyRings/$KEY_RING/cryptoKeys/$KEY_NAME
  secretEnv:
    KEYFILE_CONTENT: 'projects/$PROJECT_ID/secrets/my-service-account-key/versions/latest'
